name: Build Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            runner: ubuntu-latest
            binary_name: arm-emulator
          - os: darwin
            arch: arm64
            runner: macos-latest
            binary_name: arm-emulator
          - os: windows
            arch: amd64
            runner: windows-latest
            binary_name: arm-emulator.exe
          - os: windows
            arch: arm64
            runner: windows-latest
            binary_name: arm-emulator.exe

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Build
        run: go build -ldflags="-s -w" -o ${{ matrix.binary_name }}
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

      - name: Create release artifact name
        id: artifact
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows" ]; then
            ARTIFACT_NAME="arm-emulator-${{ matrix.os }}-${{ matrix.arch }}.exe"
            cp ${{ matrix.binary_name }} "$ARTIFACT_NAME"
          else
            ARTIFACT_NAME="arm-emulator-${{ matrix.os }}-${{ matrix.arch }}"
            cp ${{ matrix.binary_name }} "$ARTIFACT_NAME"
          fi
          echo "artifact_name=$ARTIFACT_NAME" >> $GITHUB_OUTPUT

      - name: Generate SHA256 checksum
        id: checksum
        shell: bash
        run: |
          ARTIFACT_NAME="${{ steps.artifact.outputs.artifact_name }}"
          CHECKSUM_FILE="${ARTIFACT_NAME}.sha256"

          # Generate SHA256 checksum in standard format (hash  filename)
          if [ "$RUNNER_OS" = "Windows" ]; then
            # Use PowerShell to extract hash more reliably
            HASH=$(powershell -Command "(Get-FileHash -Algorithm SHA256 '$ARTIFACT_NAME').Hash.ToLower()")
            echo "$HASH  $ARTIFACT_NAME" > "$CHECKSUM_FILE"
          else
            shasum -a 256 "$ARTIFACT_NAME" > "$CHECKSUM_FILE"
          fi

          echo "checksum_file=$CHECKSUM_FILE" >> $GITHUB_OUTPUT

          # Display checksum for verification
          echo "Generated checksum:"
          cat "$CHECKSUM_FILE"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact.outputs.artifact_name }}
          path: ${{ steps.artifact.outputs.artifact_name }}
          retention-days: 7

      - name: Upload checksum
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.checksum.outputs.checksum_file }}
          path: ${{ steps.checksum.outputs.checksum_file }}
          retention-days: 7

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "arm-emulator-*"
          path: artifacts
          merge-multiple: true

      - name: Create combined SHA256SUMS file
        run: |
          cd artifacts

          # Check if any checksum files exist
          if ! ls *.sha256 >/dev/null 2>&1; then
            echo "Error: No checksum files found!"
            exit 1
          fi

          # Combine all checksum files into SHA256SUMS
          cat *.sha256 > SHA256SUMS

          echo "Combined SHA256SUMS file:"
          cat SHA256SUMS

          # Verify SHA256SUMS is not empty
          if [ ! -s SHA256SUMS ]; then
            echo "Error: SHA256SUMS file is empty!"
            exit 1
          fi

          # Count files
          echo "Release artifacts:"
          ls -lh

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
